#change docx to docOle that can be insert into rtf
import binascii
import struct
import sys

ole_ss_template = '010500000200000011000000576f72642e446f63756d656e742e3132000000000000000000{0}'

ole_ss_header_template = 'd0cf11e0a1b11ae1000000000000000000000000000000003e000300feff090006000000000000000000000001000000010000000000000000100000{0}'\
'01000000feffffff0000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'\
'ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'\
'ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'\
'ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'\
'ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'\
'ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'\
'ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'

fat_template = 'fdfffffffeffffff030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f00000010000000'\
'1100000012000000130000001400000015000000fefffffffefffffffeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'\
'ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'\
'ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'\
'ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'\
'ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'\
'ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'\
'ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'

directory_entries_template = '52006f006f007400200045006e007400720079000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000'\
'16000500ffffffffffffffff020000009b4c75f4f564404b8af4679732ac060700000000000000000000000060367aea93add001{0}000000c000000000000000'\
'5000610063006b006100670065000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000'\
'10000200ffffffffffffffffffffffff00000000000000000000000000000000000000000000000000000000000000000000000002000000{1}00000000'\
'010043006f006d0070004f0062006a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000'\
'120002010100000003000000ffffffff000000000000000000000000000000000000000000000000000000000000000000000000000000007200000000000000'\
'03004f0062006a0049006e0066006f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000'\
'12000200ffffffffffffffffffffffff000000000000000000000000000000000000000000000000000000000000000000000000020000000600000000000000'

padding = '01000000fefffffffeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'\
'ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'\
'ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'\
'ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'\
'ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'\
'ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'\
'ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'\
'ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'\
'0100feff030a0000ffffffff9b4c75f4f564404b8af4679732ac06071f0000004d6963726f736f6674204f666669636520576f726420446f63756d656e74000a'\
'0000004d53576f7264446f630011000000576f72642e446f63756d656e742e313200f439b2710000000000000000000000000000000000000000000000000000'\
'000203000d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000'\
'00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000'\
'00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000'\
'00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000'\
'00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000'\
'00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000'\
'0105000000000000'

def docx2ole(src,dst):
	docx_file = open(src,'rb')
	docx_data = docx_file.read()

	docx_size = docx_file.tell()
	mini_fat_sect = (docx_size/0x200)

	ole_ss_header = ole_ss_header_template.format(binascii.hexlify(struct.pack('@I',mini_fat_sect+3)))

	fat = "fdfffffffeffffff"
	for x in xrange(3,mini_fat_sect+3):
		fat = fat + binascii.hexlify(struct.pack('@I',x))
	fat = fat + 'fefffffffefffffffeffffff'
	while len(fat) < 0x400:
		fat = fat + 'ffffffff'

	directory_entries = directory_entries_template.format(binascii.hexlify(struct.pack('=b',mini_fat_sect+4))\
		,binascii.hexlify(struct.pack('@I',docx_size)))

	ole_data = ''
	for byte in docx_data:
		ole_data += binascii.hexlify(byte)
	while (len(ole_data)/2 % 0x200):
		ole_data = ole_data + '00'

	ole_data = ole_ss_header + fat + directory_entries + ole_data + padding

	#ole_ss = ole_ss_template.replace('10adbeef',binascii.hexlify(struct.pack('@I',len(ole_data)/2 - 8)))
	ole_ss = ole_ss_template.format(binascii.hexlify(struct.pack('@I',len(ole_data)/2 - 8)))

	ole_file = open(dst,'wb')
	ole_file.write(ole_ss)
	ole_file.write(ole_data)

def main(src, dst):
	#src = input("src file path:")
	#dst = input("dst file path:")
	docx2ole(src, dst)



if __name__ == '__main__':
	main(sys.argv[1], sys.argv[2])